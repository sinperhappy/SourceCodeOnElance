//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("DAL", "FK_Employer_country", "Country", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Country), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.UserInfo), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_WantJob_Subjects", "Subjects", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Subjects), "WantJob", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.WantJob), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_WantJob_UserInfo", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.UserInfo), "WantJob", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.WantJob), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_BasicsInfo_PhoneNumber", "PhoneNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.PhoneNumber), "BasicsInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.BasicsInfo), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_BasicsInfo_UserInfo", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.UserInfo), "BasicsInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.BasicsInfo), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_Mail_Mail", "Mail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.Mail), "Mail1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DAL.Mail), true)]
[assembly: EdmRelationshipAttribute("DAL", "FK_SkillsInfo_UserInfo", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DAL.UserInfo), "SkillsInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DAL.SkillsInfo), true)]

#endregion

namespace DAL
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class ProjectEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“ProjectEntities”部分中的连接字符串初始化新 ProjectEntities 对象。
        /// </summary>
        public ProjectEntities() : base("name=ProjectEntities", "ProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ProjectEntities 对象。
        /// </summary>
        public ProjectEntities(string connectionString) : base(connectionString, "ProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 ProjectEntities 对象。
        /// </summary>
        public ProjectEntities(EntityConnection connection) : base(connection, "ProjectEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<C__MigrationHistory> C__MigrationHistory
        {
            get
            {
                if ((_C__MigrationHistory == null))
                {
                    _C__MigrationHistory = base.CreateObjectSet<C__MigrationHistory>("C__MigrationHistory");
                }
                return _C__MigrationHistory;
            }
        }
        private ObjectSet<C__MigrationHistory> _C__MigrationHistory;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Country> Country
        {
            get
            {
                if ((_Country == null))
                {
                    _Country = base.CreateObjectSet<Country>("Country");
                }
                return _Country;
            }
        }
        private ObjectSet<Country> _Country;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Subjects> Subjects
        {
            get
            {
                if ((_Subjects == null))
                {
                    _Subjects = base.CreateObjectSet<Subjects>("Subjects");
                }
                return _Subjects;
            }
        }
        private ObjectSet<Subjects> _Subjects;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<UserInfo> UserInfo
        {
            get
            {
                if ((_UserInfo == null))
                {
                    _UserInfo = base.CreateObjectSet<UserInfo>("UserInfo");
                }
                return _UserInfo;
            }
        }
        private ObjectSet<UserInfo> _UserInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<WantJob> WantJob
        {
            get
            {
                if ((_WantJob == null))
                {
                    _WantJob = base.CreateObjectSet<WantJob>("WantJob");
                }
                return _WantJob;
            }
        }
        private ObjectSet<WantJob> _WantJob;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Mail> Mail
        {
            get
            {
                if ((_Mail == null))
                {
                    _Mail = base.CreateObjectSet<Mail>("Mail");
                }
                return _Mail;
            }
        }
        private ObjectSet<Mail> _Mail;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<BasicsInfo> BasicsInfo
        {
            get
            {
                if ((_BasicsInfo == null))
                {
                    _BasicsInfo = base.CreateObjectSet<BasicsInfo>("BasicsInfo");
                }
                return _BasicsInfo;
            }
        }
        private ObjectSet<BasicsInfo> _BasicsInfo;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PhoneNumber> PhoneNumber
        {
            get
            {
                if ((_PhoneNumber == null))
                {
                    _PhoneNumber = base.CreateObjectSet<PhoneNumber>("PhoneNumber");
                }
                return _PhoneNumber;
            }
        }
        private ObjectSet<PhoneNumber> _PhoneNumber;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SkillsInfo> SkillsInfo
        {
            get
            {
                if ((_SkillsInfo == null))
                {
                    _SkillsInfo = base.CreateObjectSet<SkillsInfo>("SkillsInfo");
                }
                return _SkillsInfo;
            }
        }
        private ObjectSet<SkillsInfo> _SkillsInfo;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 C__MigrationHistory EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToC__MigrationHistory(C__MigrationHistory c__MigrationHistory)
        {
            base.AddObject("C__MigrationHistory", c__MigrationHistory);
        }
    
        /// <summary>
        /// 用于向 Country EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToCountry(Country country)
        {
            base.AddObject("Country", country);
        }
    
        /// <summary>
        /// 用于向 Subjects EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSubjects(Subjects subjects)
        {
            base.AddObject("Subjects", subjects);
        }
    
        /// <summary>
        /// 用于向 UserInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToUserInfo(UserInfo userInfo)
        {
            base.AddObject("UserInfo", userInfo);
        }
    
        /// <summary>
        /// 用于向 WantJob EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToWantJob(WantJob wantJob)
        {
            base.AddObject("WantJob", wantJob);
        }
    
        /// <summary>
        /// 用于向 Mail EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMail(Mail mail)
        {
            base.AddObject("Mail", mail);
        }
    
        /// <summary>
        /// 用于向 BasicsInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBasicsInfo(BasicsInfo basicsInfo)
        {
            base.AddObject("BasicsInfo", basicsInfo);
        }
    
        /// <summary>
        /// 用于向 PhoneNumber EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPhoneNumber(PhoneNumber phoneNumber)
        {
            base.AddObject("PhoneNumber", phoneNumber);
        }
    
        /// <summary>
        /// 用于向 SkillsInfo EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSkillsInfo(SkillsInfo skillsInfo)
        {
            base.AddObject("SkillsInfo", skillsInfo);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="BasicsInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BasicsInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 BasicsInfo 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="countryId">CountryId 属性的初始值。</param>
        /// <param name="address">Address 属性的初始值。</param>
        public static BasicsInfo CreateBasicsInfo(global::System.String id, global::System.String userId, global::System.Int32 countryId, global::System.String address)
        {
            BasicsInfo basicsInfo = new BasicsInfo();
            basicsInfo.ID = id;
            basicsInfo.UserId = userId;
            basicsInfo.CountryId = countryId;
            basicsInfo.Address = address;
            return basicsInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryId
        {
            get
            {
                return _CountryId;
            }
            set
            {
                OnCountryIdChanging(value);
                ReportPropertyChanging("CountryId");
                _CountryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryId");
                OnCountryIdChanged();
            }
        }
        private global::System.Int32 _CountryId;
        partial void OnCountryIdChanging(global::System.Int32 value);
        partial void OnCountryIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhoneNumberId
        {
            get
            {
                return _PhoneNumberId;
            }
            set
            {
                OnPhoneNumberIdChanging(value);
                ReportPropertyChanging("PhoneNumberId");
                _PhoneNumberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneNumberId");
                OnPhoneNumberIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PhoneNumberId;
        partial void OnPhoneNumberIdChanging(Nullable<global::System.Int32> value);
        partial void OnPhoneNumberIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AreaCode
        {
            get
            {
                return _AreaCode;
            }
            set
            {
                OnAreaCodeChanging(value);
                ReportPropertyChanging("AreaCode");
                _AreaCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AreaCode");
                OnAreaCodeChanged();
            }
        }
        private global::System.String _AreaCode;
        partial void OnAreaCodeChanging(global::System.String value);
        partial void OnAreaCodeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Ext
        {
            get
            {
                return _Ext;
            }
            set
            {
                OnExtChanging(value);
                ReportPropertyChanging("Ext");
                _Ext = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Ext");
                OnExtChanged();
            }
        }
        private global::System.String _Ext;
        partial void OnExtChanging(global::System.String value);
        partial void OnExtChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_BasicsInfo_PhoneNumber", "PhoneNumber")]
        public PhoneNumber PhoneNumber1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneNumber>("DAL.FK_BasicsInfo_PhoneNumber", "PhoneNumber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneNumber>("DAL.FK_BasicsInfo_PhoneNumber", "PhoneNumber").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PhoneNumber> PhoneNumber1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PhoneNumber>("DAL.FK_BasicsInfo_PhoneNumber", "PhoneNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PhoneNumber>("DAL.FK_BasicsInfo_PhoneNumber", "PhoneNumber", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_BasicsInfo_UserInfo", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("DAL.FK_BasicsInfo_UserInfo", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("DAL.FK_BasicsInfo_UserInfo", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("DAL.FK_BasicsInfo_UserInfo", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("DAL.FK_BasicsInfo_UserInfo", "UserInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="C__MigrationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__MigrationHistory : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 C__MigrationHistory 对象。
        /// </summary>
        /// <param name="migrationId">MigrationId 属性的初始值。</param>
        /// <param name="model">Model 属性的初始值。</param>
        /// <param name="productVersion">ProductVersion 属性的初始值。</param>
        public static C__MigrationHistory CreateC__MigrationHistory(global::System.String migrationId, global::System.Byte[] model, global::System.String productVersion)
        {
            C__MigrationHistory c__MigrationHistory = new C__MigrationHistory();
            c__MigrationHistory.MigrationId = migrationId;
            c__MigrationHistory.Model = model;
            c__MigrationHistory.ProductVersion = productVersion;
            return c__MigrationHistory;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MigrationId
        {
            get
            {
                return _MigrationId;
            }
            set
            {
                if (_MigrationId != value)
                {
                    OnMigrationIdChanging(value);
                    ReportPropertyChanging("MigrationId");
                    _MigrationId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MigrationId");
                    OnMigrationIdChanged();
                }
            }
        }
        private global::System.String _MigrationId;
        partial void OnMigrationIdChanging(global::System.String value);
        partial void OnMigrationIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Model
        {
            get
            {
                return StructuralObject.GetValidValue(_Model);
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.Byte[] _Model;
        partial void OnModelChanging(global::System.Byte[] value);
        partial void OnModelChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Country")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Country : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Country 对象。
        /// </summary>
        /// <param name="countryID">CountryID 属性的初始值。</param>
        /// <param name="countryName">CountryName 属性的初始值。</param>
        public static Country CreateCountry(global::System.Int32 countryID, global::System.String countryName)
        {
            Country country = new Country();
            country.CountryID = countryID;
            country.CountryName = countryName;
            return country;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Employer_country", "UserInfo")]
        public EntityCollection<UserInfo> UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInfo>("DAL.FK_Employer_country", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInfo>("DAL.FK_Employer_country", "UserInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Mail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Mail : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Mail 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="fromAddress">FromAddress 属性的初始值。</param>
        /// <param name="toAddress">ToAddress 属性的初始值。</param>
        /// <param name="userName">UserName 属性的初始值。</param>
        /// <param name="passWord">PassWord 属性的初始值。</param>
        /// <param name="serverAddress">ServerAddress 属性的初始值。</param>
        public static Mail CreateMail(global::System.String id, global::System.String fromAddress, global::System.String toAddress, global::System.String userName, global::System.String passWord, global::System.String serverAddress)
        {
            Mail mail = new Mail();
            mail.ID = id;
            mail.FromAddress = fromAddress;
            mail.ToAddress = toAddress;
            mail.UserName = userName;
            mail.PassWord = passWord;
            mail.ServerAddress = serverAddress;
            return mail;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FromAddress
        {
            get
            {
                return _FromAddress;
            }
            set
            {
                OnFromAddressChanging(value);
                ReportPropertyChanging("FromAddress");
                _FromAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FromAddress");
                OnFromAddressChanged();
            }
        }
        private global::System.String _FromAddress;
        partial void OnFromAddressChanging(global::System.String value);
        partial void OnFromAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToAddress
        {
            get
            {
                return _ToAddress;
            }
            set
            {
                OnToAddressChanging(value);
                ReportPropertyChanging("ToAddress");
                _ToAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ToAddress");
                OnToAddressChanged();
            }
        }
        private global::System.String _ToAddress;
        partial void OnToAddressChanging(global::System.String value);
        partial void OnToAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassWord
        {
            get
            {
                return _PassWord;
            }
            set
            {
                OnPassWordChanging(value);
                ReportPropertyChanging("PassWord");
                _PassWord = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassWord");
                OnPassWordChanged();
            }
        }
        private global::System.String _PassWord;
        partial void OnPassWordChanging(global::System.String value);
        partial void OnPassWordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ServerAddress
        {
            get
            {
                return _ServerAddress;
            }
            set
            {
                OnServerAddressChanging(value);
                ReportPropertyChanging("ServerAddress");
                _ServerAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ServerAddress");
                OnServerAddressChanged();
            }
        }
        private global::System.String _ServerAddress;
        partial void OnServerAddressChanging(global::System.String value);
        partial void OnServerAddressChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Port
        {
            get
            {
                return _Port;
            }
            set
            {
                OnPortChanging(value);
                ReportPropertyChanging("Port");
                _Port = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Port");
                OnPortChanged();
            }
        }
        private Nullable<global::System.Int32> _Port;
        partial void OnPortChanging(Nullable<global::System.Int32> value);
        partial void OnPortChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Subject
        {
            get
            {
                return _Subject;
            }
            set
            {
                OnSubjectChanging(value);
                ReportPropertyChanging("Subject");
                _Subject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Subject");
                OnSubjectChanged();
            }
        }
        private global::System.String _Subject;
        partial void OnSubjectChanging(global::System.String value);
        partial void OnSubjectChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Mail_Mail", "Mail1")]
        public Mail Mail1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mail>("DAL.FK_Mail_Mail", "Mail1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mail>("DAL.FK_Mail_Mail", "Mail1").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mail> Mail1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mail>("DAL.FK_Mail_Mail", "Mail1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mail>("DAL.FK_Mail_Mail", "Mail1", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Mail_Mail", "Mail")]
        public Mail Mail2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mail>("DAL.FK_Mail_Mail", "Mail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mail>("DAL.FK_Mail_Mail", "Mail").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Mail> Mail2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Mail>("DAL.FK_Mail_Mail", "Mail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Mail>("DAL.FK_Mail_Mail", "Mail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="PhoneNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhoneNumber : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PhoneNumber 对象。
        /// </summary>
        /// <param name="phoneNumberID">PhoneNumberID 属性的初始值。</param>
        /// <param name="phoneNumberName">PhoneNumberName 属性的初始值。</param>
        public static PhoneNumber CreatePhoneNumber(global::System.Int32 phoneNumberID, global::System.String phoneNumberName)
        {
            PhoneNumber phoneNumber = new PhoneNumber();
            phoneNumber.PhoneNumberID = phoneNumberID;
            phoneNumber.PhoneNumberName = phoneNumberName;
            return phoneNumber;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhoneNumberID
        {
            get
            {
                return _PhoneNumberID;
            }
            set
            {
                if (_PhoneNumberID != value)
                {
                    OnPhoneNumberIDChanging(value);
                    ReportPropertyChanging("PhoneNumberID");
                    _PhoneNumberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhoneNumberID");
                    OnPhoneNumberIDChanged();
                }
            }
        }
        private global::System.Int32 _PhoneNumberID;
        partial void OnPhoneNumberIDChanging(global::System.Int32 value);
        partial void OnPhoneNumberIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumberName
        {
            get
            {
                return _PhoneNumberName;
            }
            set
            {
                OnPhoneNumberNameChanging(value);
                ReportPropertyChanging("PhoneNumberName");
                _PhoneNumberName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumberName");
                OnPhoneNumberNameChanged();
            }
        }
        private global::System.String _PhoneNumberName;
        partial void OnPhoneNumberNameChanging(global::System.String value);
        partial void OnPhoneNumberNameChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_BasicsInfo_PhoneNumber", "BasicsInfo")]
        public EntityCollection<BasicsInfo> BasicsInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BasicsInfo>("DAL.FK_BasicsInfo_PhoneNumber", "BasicsInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BasicsInfo>("DAL.FK_BasicsInfo_PhoneNumber", "BasicsInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="SkillsInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SkillsInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SkillsInfo 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="userId">UserId 属性的初始值。</param>
        /// <param name="overView">OverView 属性的初始值。</param>
        /// <param name="yourSkills">YourSkills 属性的初始值。</param>
        public static SkillsInfo CreateSkillsInfo(global::System.String id, global::System.String userId, global::System.String overView, global::System.String yourSkills)
        {
            SkillsInfo skillsInfo = new SkillsInfo();
            skillsInfo.ID = id;
            skillsInfo.UserId = userId;
            skillsInfo.OverView = overView;
            skillsInfo.YourSkills = yourSkills;
            return skillsInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoPath
        {
            get
            {
                return _PhotoPath;
            }
            set
            {
                OnPhotoPathChanging(value);
                ReportPropertyChanging("PhotoPath");
                _PhotoPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoPath");
                OnPhotoPathChanged();
            }
        }
        private global::System.String _PhotoPath;
        partial void OnPhotoPathChanging(global::System.String value);
        partial void OnPhotoPathChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TagLine
        {
            get
            {
                return _TagLine;
            }
            set
            {
                OnTagLineChanging(value);
                ReportPropertyChanging("TagLine");
                _TagLine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TagLine");
                OnTagLineChanged();
            }
        }
        private global::System.String _TagLine;
        partial void OnTagLineChanging(global::System.String value);
        partial void OnTagLineChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MyRate
        {
            get
            {
                return _MyRate;
            }
            set
            {
                OnMyRateChanging(value);
                ReportPropertyChanging("MyRate");
                _MyRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MyRate");
                OnMyRateChanged();
            }
        }
        private Nullable<global::System.Double> _MyRate;
        partial void OnMyRateChanging(Nullable<global::System.Double> value);
        partial void OnMyRateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> SystemRate
        {
            get
            {
                return _SystemRate;
            }
            set
            {
                OnSystemRateChanging(value);
                ReportPropertyChanging("SystemRate");
                _SystemRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemRate");
                OnSystemRateChanged();
            }
        }
        private Nullable<global::System.Double> _SystemRate;
        partial void OnSystemRateChanging(Nullable<global::System.Double> value);
        partial void OnSystemRateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OverView
        {
            get
            {
                return _OverView;
            }
            set
            {
                OnOverViewChanging(value);
                ReportPropertyChanging("OverView");
                _OverView = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OverView");
                OnOverViewChanged();
            }
        }
        private global::System.String _OverView;
        partial void OnOverViewChanging(global::System.String value);
        partial void OnOverViewChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YourSkills
        {
            get
            {
                return _YourSkills;
            }
            set
            {
                OnYourSkillsChanging(value);
                ReportPropertyChanging("YourSkills");
                _YourSkills = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YourSkills");
                OnYourSkillsChanged();
            }
        }
        private global::System.String _YourSkills;
        partial void OnYourSkillsChanging(global::System.String value);
        partial void OnYourSkillsChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_SkillsInfo_UserInfo", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("DAL.FK_SkillsInfo_UserInfo", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("DAL.FK_SkillsInfo_UserInfo", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("DAL.FK_SkillsInfo_UserInfo", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("DAL.FK_SkillsInfo_UserInfo", "UserInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="Subjects")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Subjects : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Subjects 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static Subjects CreateSubjects(global::System.Int32 id)
        {
            Subjects subjects = new Subjects();
            subjects.ID = id;
            return subjects;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_WantJob_Subjects", "WantJob")]
        public EntityCollection<WantJob> WantJob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WantJob>("DAL.FK_WantJob_Subjects", "WantJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WantJob>("DAL.FK_WantJob_Subjects", "WantJob", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInfo : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 UserInfo 对象。
        /// </summary>
        /// <param name="userID">UserID 属性的初始值。</param>
        /// <param name="firstName">FirstName 属性的初始值。</param>
        /// <param name="lastName">LastName 属性的初始值。</param>
        /// <param name="email">Email 属性的初始值。</param>
        /// <param name="passWord">PassWord 属性的初始值。</param>
        /// <param name="type">Type 属性的初始值。</param>
        public static UserInfo CreateUserInfo(global::System.String userID, global::System.String firstName, global::System.String lastName, global::System.String email, global::System.String passWord, global::System.Int32 type)
        {
            UserInfo userInfo = new UserInfo();
            userInfo.UserID = userID;
            userInfo.FirstName = firstName;
            userInfo.LastName = lastName;
            userInfo.Email = email;
            userInfo.PassWord = passWord;
            userInfo.Type = type;
            return userInfo;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.String _UserID;
        partial void OnUserIDChanging(global::System.String value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassWord
        {
            get
            {
                return _PassWord;
            }
            set
            {
                OnPassWordChanging(value);
                ReportPropertyChanging("PassWord");
                _PassWord = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassWord");
                OnPassWordChanged();
            }
        }
        private global::System.String _PassWord;
        partial void OnPassWordChanging(global::System.String value);
        partial void OnPassWordChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> How
        {
            get
            {
                return _How;
            }
            set
            {
                OnHowChanging(value);
                ReportPropertyChanging("How");
                _How = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("How");
                OnHowChanged();
            }
        }
        private Nullable<global::System.Int32> _How;
        partial void OnHowChanging(Nullable<global::System.Int32> value);
        partial void OnHowChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountType
        {
            get
            {
                return _AccountType;
            }
            set
            {
                OnAccountTypeChanging(value);
                ReportPropertyChanging("AccountType");
                _AccountType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountType");
                OnAccountTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountType;
        partial void OnAccountTypeChanging(Nullable<global::System.Int32> value);
        partial void OnAccountTypeChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_Employer_country", "Country")]
        public Country Country
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DAL.FK_Employer_country", "Country").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DAL.FK_Employer_country", "Country").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Country> CountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Country>("DAL.FK_Employer_country", "Country");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Country>("DAL.FK_Employer_country", "Country", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_WantJob_UserInfo", "WantJob")]
        public EntityCollection<WantJob> WantJob
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WantJob>("DAL.FK_WantJob_UserInfo", "WantJob");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WantJob>("DAL.FK_WantJob_UserInfo", "WantJob", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_BasicsInfo_UserInfo", "BasicsInfo")]
        public EntityCollection<BasicsInfo> BasicsInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BasicsInfo>("DAL.FK_BasicsInfo_UserInfo", "BasicsInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BasicsInfo>("DAL.FK_BasicsInfo_UserInfo", "BasicsInfo", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_SkillsInfo_UserInfo", "SkillsInfo")]
        public EntityCollection<SkillsInfo> SkillsInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SkillsInfo>("DAL.FK_SkillsInfo_UserInfo", "SkillsInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SkillsInfo>("DAL.FK_SkillsInfo_UserInfo", "SkillsInfo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DAL", Name="WantJob")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WantJob : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 WantJob 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="subjectsID">SubjectsID 属性的初始值。</param>
        /// <param name="workerID">WorkerID 属性的初始值。</param>
        public static WantJob CreateWantJob(global::System.String id, global::System.Int32 subjectsID, global::System.String workerID)
        {
            WantJob wantJob = new WantJob();
            wantJob.ID = id;
            wantJob.SubjectsID = subjectsID;
            wantJob.WorkerID = workerID;
            return wantJob;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubjectsID
        {
            get
            {
                return _SubjectsID;
            }
            set
            {
                OnSubjectsIDChanging(value);
                ReportPropertyChanging("SubjectsID");
                _SubjectsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubjectsID");
                OnSubjectsIDChanged();
            }
        }
        private global::System.Int32 _SubjectsID;
        partial void OnSubjectsIDChanging(global::System.Int32 value);
        partial void OnSubjectsIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkerID
        {
            get
            {
                return _WorkerID;
            }
            set
            {
                OnWorkerIDChanging(value);
                ReportPropertyChanging("WorkerID");
                _WorkerID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkerID");
                OnWorkerIDChanged();
            }
        }
        private global::System.String _WorkerID;
        partial void OnWorkerIDChanging(global::System.String value);
        partial void OnWorkerIDChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_WantJob_Subjects", "Subjects")]
        public Subjects Subjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subjects>("DAL.FK_WantJob_Subjects", "Subjects").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subjects>("DAL.FK_WantJob_Subjects", "Subjects").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Subjects> SubjectsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Subjects>("DAL.FK_WantJob_Subjects", "Subjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Subjects>("DAL.FK_WantJob_Subjects", "Subjects", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DAL", "FK_WantJob_UserInfo", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("DAL.FK_WantJob_UserInfo", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("DAL.FK_WantJob_UserInfo", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("DAL.FK_WantJob_UserInfo", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("DAL.FK_WantJob_UserInfo", "UserInfo", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
