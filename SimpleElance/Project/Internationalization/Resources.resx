<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutInfo" xml:space="preserve">
    <value>This is a test task.</value>
  </data>
  <data name="AboutTask" xml:space="preserve">
    <value>About this task</value>
  </data>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="AccountType" xml:space="preserve">
    <value>Account Type</value>
  </data>
  <data name="AdminSupport" xml:space="preserve">
    <value>Admin Support</value>
  </data>
  <data name="Advertising" xml:space="preserve">
    <value>Advertising</value>
  </data>
  <data name="ApplicationDevelopment" xml:space="preserve">
    <value>Application Development</value>
  </data>
  <data name="ArticleWriting" xml:space="preserve">
    <value>Article Writing</value>
  </data>
  <data name="Blog" xml:space="preserve">
    <value>Blog</value>
  </data>
  <data name="Business" xml:space="preserve">
    <value>Business</value>
  </data>
  <data name="CheckUser" xml:space="preserve">
    <value>Username exists, please try a different username.</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Company Name(optional)</value>
  </data>
  <data name="Conference" xml:space="preserve">
    <value>Conference</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue &gt;&gt;</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Coworker" xml:space="preserve">
    <value>Coworker</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Create an Account</value>
  </data>
  <data name="CreateAccountInfo" xml:space="preserve">
    <value>Hello and welcome to Demo! Already have an account?</value>
  </data>
  <data name="CreateEmployer" xml:space="preserve">
    <value>Create Employer Informations</value>
  </data>
  <data name="CreateWorker" xml:space="preserve">
    <value>Create Worker</value>
  </data>
  <data name="CreateWorkerInfo1" xml:space="preserve">
    <value>Create a Contractor Account</value>
  </data>
  <data name="CreateWorkerInfo2" xml:space="preserve">
    <value>Looking to hire?</value>
  </data>
  <data name="CreateWorkerInfo3" xml:space="preserve">
    <value>Employer Information</value>
  </data>
  <data name="CreateWorkerInfo4" xml:space="preserve">
    <value>How do you want to represent yourself to clients on task publish system?</value>
  </data>
  <data name="DataEntry" xml:space="preserve">
    <value>Data Entry</value>
  </data>
  <data name="DesignMultimedia" xml:space="preserve">
    <value>Design&amp;Multimedia</value>
  </data>
  <data name="DisplayName" xml:space="preserve">
    <value>Display Name</value>
  </data>
  <data name="EbooksBlogs" xml:space="preserve">
    <value>E-books and Blogs</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>E-mail Address</value>
  </data>
  <data name="EmailFaield" xml:space="preserve">
    <value>E-mail address is not correct.</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>E-mail Address required.</value>
  </data>
  <data name="EmployerInfo" xml:space="preserve">
    <value>Employer Information</value>
  </data>
  <data name="EmployerProfile" xml:space="preserve">
    <value>Employer Profile</value>
  </data>
  <data name="Facebook" xml:space="preserve">
    <value>Facebook</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="FirstNameRequired" xml:space="preserve">
    <value>First name required.</value>
  </data>
  <data name="Friend" xml:space="preserve">
    <value>Friend</value>
  </data>
  <data name="GraphicDesign" xml:space="preserve">
    <value>Graphic Design</value>
  </data>
  <data name="How" xml:space="preserve">
    <value>How did you hear about us?</value>
  </data>
  <data name="Illustration" xml:space="preserve">
    <value>Illustration</value>
  </data>
  <data name="Index" xml:space="preserve">
    <value>Index</value>
  </data>
  <data name="Individual" xml:space="preserve">
    <value>Individual</value>
  </data>
  <data name="ITProgramming" xml:space="preserve">
    <value>IT&amp;Programming</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="LastNameRequired" xml:space="preserve">
    <value>Last name required.</value>
  </data>
  <data name="LeadGeneration" xml:space="preserve">
    <value>Lead Generation</value>
  </data>
  <data name="Linkedln" xml:space="preserve">
    <value>Linkedln</value>
  </data>
  <data name="LoginFailed" xml:space="preserve">
    <value>Login failed, please check the username and password.</value>
  </data>
  <data name="LoginInfo" xml:space="preserve">
    <value>Please input username and password. if you do not have an account, please</value>
  </data>
  <data name="Logoff" xml:space="preserve">
    <value>Log off</value>
  </data>
  <data name="Logos" xml:space="preserve">
    <value>Logos</value>
  </data>
  <data name="MobileApps" xml:space="preserve">
    <value>Mobile Apps</value>
  </data>
  <data name="OnlineAdvertisement" xml:space="preserve">
    <value>Online advertisement</value>
  </data>
  <data name="OnlineNewsArticle" xml:space="preserve">
    <value>Online news article</value>
  </data>
  <data name="Other" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="PassWord" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PassWordFaield" xml:space="preserve">
    <value>Your passwords do not match.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required.</value>
  </data>
  <data name="PostJob" xml:space="preserve">
    <value>Post a Job</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>register</value>
  </data>
  <data name="RegisterEmployer" xml:space="preserve">
    <value>Register as a client</value>
  </data>
  <data name="Relemarketing" xml:space="preserve">
    <value>Relemarketing</value>
  </data>
  <data name="Research" xml:space="preserve">
    <value>Research</value>
  </data>
  <data name="ResendEmail" xml:space="preserve">
    <value>Resend verification email</value>
  </data>
  <data name="RetypePassWord" xml:space="preserve">
    <value>Retype Password</value>
  </data>
  <data name="RetypePassWordRequired" xml:space="preserve">
    <value>Retype Password required.</value>
  </data>
  <data name="SalesMarketing" xml:space="preserve">
    <value>Sales&amp;Marketing</value>
  </data>
  <data name="SearchOnlineMarketing" xml:space="preserve">
    <value>Search&amp;Online Marketing</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>--Select--</value>
  </data>
  <data name="SelectALL" xml:space="preserve">
    <value>select all</value>
  </data>
  <data name="SendEmail" xml:space="preserve">
    <value>Send Email</value>
  </data>
  <data name="SendEmailBody" xml:space="preserve">
    <value>Welcome to Task publish system!</value>
  </data>
  <data name="SendEmailFaield" xml:space="preserve">
    <value>Sorry, error happened, please wait!</value>
  </data>
  <data name="SendEmailSubject" xml:space="preserve">
    <value>Please verify your E-mail address.</value>
  </data>
  <data name="SendEmailSuccess" xml:space="preserve">
    <value>We are already send a E-mail to you, please check it and verify your E-mail address.</value>
  </data>
  <data name="SignIn" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="SocialMediaSite" xml:space="preserve">
    <value>Social Media Site</value>
  </data>
  <data name="SystemTitle" xml:space="preserve">
    <value>tasks publish system</value>
  </data>
  <data name="Transcription" xml:space="preserve">
    <value>Transcription</value>
  </data>
  <data name="Translation" xml:space="preserve">
    <value>Translation</value>
  </data>
  <data name="TV" xml:space="preserve">
    <value>TV/Radio/Print</value>
  </data>
  <data name="Twitter" xml:space="preserve">
    <value>Twitter</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="UserNameMaxLength" xml:space="preserve">
    <value>Must be less than 20 characters.</value>
  </data>
  <data name="UserNameRequired" xml:space="preserve">
    <value>User name is required.</value>
  </data>
  <data name="VerifyEmail" xml:space="preserve">
    <value>Verify Email</value>
  </data>
  <data name="VerifyEmailInfo" xml:space="preserve">
    <value>You're almost done! Check your email.</value>
  </data>
  <data name="VerifyEmailInfo1" xml:space="preserve">
    <value>Check this link in the email we sent to</value>
  </data>
  <data name="VerifyEmailInfo2" xml:space="preserve">
    <value>to complete your account</value>
  </data>
  <data name="VideographyEditing" xml:space="preserve">
    <value>Videography&amp;Editing</value>
  </data>
  <data name="VirtualAssistant" xml:space="preserve">
    <value>Virtual Assistant</value>
  </data>
  <data name="WantHire" xml:space="preserve">
    <value>I want to Hire</value>
  </data>
  <data name="WantHireInfo" xml:space="preserve">
    <value>Instant access to the world's top pool of rated contractors.</value>
  </data>
  <data name="WantJob" xml:space="preserve">
    <value>Want Job</value>
  </data>
  <data name="WantJobInfo1" xml:space="preserve">
    <value>What Type of Jobs Do You Want?</value>
  </data>
  <data name="WantJobInfo2" xml:space="preserve">
    <value>Select a category below. Don't worry, you can change your category or add more categories later if needed.</value>
  </data>
  <data name="WantJobInfo3" xml:space="preserve">
    <value>Yes! Send me new job listing in the selected category.</value>
  </data>
  <data name="WantJobType" xml:space="preserve">
    <value>Type of Jobs You Want</value>
  </data>
  <data name="WantWork" xml:space="preserve">
    <value>I want to Work</value>
  </data>
  <data name="WantWorkInfo" xml:space="preserve">
    <value>Find clients, get hired, get paid</value>
  </data>
  <data name="WebContent" xml:space="preserve">
    <value>Web Content</value>
  </data>
  <data name="WebDesign" xml:space="preserve">
    <value>Web Design</value>
  </data>
  <data name="WebProgramming" xml:space="preserve">
    <value>Web Programming</value>
  </data>
  <data name="WebSearchEngine" xml:space="preserve">
    <value>Web Search Engine</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="WelcomeInfo1" xml:space="preserve">
    <value>Congratulations! You're now registered.</value>
  </data>
  <data name="WelcomeInfo2" xml:space="preserve">
    <value>Post a job to get proposals and hire contractors on Task publish system.</value>
  </data>
  <data name="WorkerProfile" xml:space="preserve">
    <value>Worker Profile</value>
  </data>
  <data name="WritingTranslation" xml:space="preserve">
    <value>Writing&amp;Translation</value>
  </data>
  <data name="StartProfile" xml:space="preserve">
    <value>Start Your Profile</value>
  </data>
  <data name="Address" xml:space="preserve">
    <value>Address</value>
    <comment>Ad</comment>
  </data>
  <data name="Address2" xml:space="preserve">
    <value>Address2</value>
  </data>
  <data name="AddressRequired" xml:space="preserve">
    <value>Address required.</value>
  </data>
  <data name="AreaCode" xml:space="preserve">
    <value>Area Code</value>
  </data>
  <data name="BasicsInfo" xml:space="preserve">
    <value>Basics Information</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="CountryPhone" xml:space="preserve">
    <value>International Area Code</value>
  </data>
  <data name="Ext" xml:space="preserve">
    <value>Ext</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="PhoneNumberField" xml:space="preserve">
    <value>This field must be a phone number</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State/Province</value>
  </data>
  <data name="Zip" xml:space="preserve">
    <value>Zip/Postal Code</value>
  </data>
  <data name="CreateBasics" xml:space="preserve">
    <value>Create Basics Informations</value>
  </data>
  <data name="CreateBasicsInfo1" xml:space="preserve">
    <value>Get Your Profile Started!</value>
  </data>
  <data name="CreateBasicsInfo2" xml:space="preserve">
    <value>First, let's get some basics out of the way...</value>
  </data>
  <data name="HourlyRate" xml:space="preserve">
    <value>My hourly rate</value>
  </data>
  <data name="HourlyRateFailed" xml:space="preserve">
    <value>This field must be a number</value>
  </data>
  <data name="HourlyRateRequired" xml:space="preserve">
    <value>My hourly rate required.</value>
  </data>
  <data name="OverView" xml:space="preserve">
    <value>Overview</value>
  </data>
  <data name="OverViewRequired" xml:space="preserve">
    <value>Overview required.</value>
  </data>
  <data name="Picture" xml:space="preserve">
    <value>Your Picture(optional)</value>
  </data>
  <data name="Skills" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="SkillsRequired" xml:space="preserve">
    <value>Skills required.</value>
  </data>
  <data name="SystemRate" xml:space="preserve">
    <value>What system will change clients(after system fees)</value>
  </data>
  <data name="SystemRateFailed" xml:space="preserve">
    <value>This field must be a number</value>
  </data>
  <data name="SystemRateRequired" xml:space="preserve">
    <value>System Rate required.</value>
  </data>
  <data name="Tagline" xml:space="preserve">
    <value>Tagline(optional)</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>&lt;&lt; Back</value>
  </data>
  <data name="ChoseFile" xml:space="preserve">
    <value>please chose the file!</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="CreateSkills" xml:space="preserve">
    <value>Create Skills Informations</value>
  </data>
  <data name="CreateSkillsInfo1" xml:space="preserve">
    <value>Get Your Profile Started!</value>
  </data>
  <data name="CreateSkillsInfo2" xml:space="preserve">
    <value>Market your skills and experience...</value>
  </data>
  <data name="SkillsExperience" xml:space="preserve">
    <value>Skills and Experience</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
</root>